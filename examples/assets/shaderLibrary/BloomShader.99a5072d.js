import"../modulepreload-polyfill.b7f2da20.js";import{M as s}from"../index.790bec74.js";import{n as m,g as r}from"../vis-three.middleware.es.7f273029.js";import{g as u}from"../lil-gui.module.min.095a7f3d.js";import{B as a}from"../vis-three.library-shader.es.e681e508.js";import"../three.237d835c.js";import"../index.1d3a6ec0.js";import"../index.202ebdec.js";import"../index.2e2f06f6.js";import"../ShaderPass.02f07bc0.js";import"../vis-three.plugin-orbit-controls.es.9991f892.js";import"../index.f318ae8c.js";import"../index.4ec3bfd2.js";import"../index.ea2b9d59.js";import"../index.591a8368.js";import"../index.a30a6c1f.js";import"../index.12fd638d.js";import"../index.32dc3bb0.js";import"../vis-three.plugin-keyboard-manager.es.417ffa7e.js";import"../Antdv.414c4eb5.js";import"../index.edc751ad.js";import"../CSS3DRenderer.ba0f6fa5.js";import"../index.e6be8a02.js";import"../index.2f498209.js";import"../index.117a61e1.js";import"../index.3b8dbf96.js";import"../index.c0475655.js";import"../index.2328f892.js";import"../index.c35e5a3e.js";import"../vis-three.plugin-pointer-manager.es.640cfa1a.js";import"../index.cd2c2c2e.js";import"../index.a089cc34.js";import"../index.bca5cc71.js";import"../index.692e1021.js";import"../index.90db9154.js";import"../vis-three.module-particle.es.8e43cbb8.js";import"../UnrealBloomPass.2cdbe9ee.js";import"../index.ee52b7bf.js";import"../vis-three.convenient.es.7b860830.js";import"../index.bdaae9f1.js";import"../vis-three.strategy-orbit-controls-support.es.706978dc.js";import"../index.d3463d42.js";import"../vis-three.library-parser.es.5c9e4dac.js";import"../vis-three.strategy-multi-renderer.es.a35ffd0a.js";import"../vis-three.strategy-selection-prompt.es.fc4c19e4.js";import"../vis-three.plugin-loader-manager.es.c1771985.js";import"../G6.d44f13fb.js";m.register(a);const n=new s().setDom(document.getElementById("app")).setSize().setStats(!0);r.injectEngine=n;const d=r("Scene");n.setSceneBySymbol(d.vid);r.injectScene=!0;const p=r("MeshBasicMaterial",{color:"rgb(200, 100, 200)"}),t=r("ShaderMaterial",{...m.generateConfig(a.name,{color:{value:{r:.5,g:1,b:1}}}),transparent:!0,depthTest:0},{strict:!1}),l=r("SphereGeometry",{radius:10,groups:[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}]}),g=r("BoxGeometry",{groups:[{start:0,count:1/0,materialIndex:0},{start:0,count:1/0,materialIndex:1}]});r("Mesh",{material:[p.vid,t.vid],geometry:l.vid});r("Mesh",{material:[p.vid,t.vid],geometry:g.vid,position:{x:30}});n.play();const o=new u,i={extend:t.uniforms.extend.value,color:t.uniforms.color.value,brightness:t.uniforms.brightness.value,specular:t.uniforms.specular.value,outFade:t.uniforms.outFade.value,inFade:t.uniforms.inFade.value};o.addColor(i,"color");o.add(i,"extend",0,10,1).onChange(e=>{t.uniforms.extend.value=e});o.add(i,"brightness",0,1,.01).onChange(e=>{t.uniforms.brightness.value=e});o.add(i,"outFade",0,3,.1).onChange(e=>{t.uniforms.outFade.value=e});o.add(i,"inFade",0,3,.1).onChange(e=>{t.uniforms.inFade.value=e});o.add(i,"specular",0,1,.01).onChange(e=>{t.uniforms.specular.value=e});
