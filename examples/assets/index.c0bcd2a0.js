import{m as y,t as l,b as d}from"./curve.0ba3d968.js";import{a as p,b as c}from"./index.0a430562.js";import{w as h}from"./three.3f33d046.js";const v="@vis-three/strategy-keyboard-move-render";class w extends y{constructor(e,s){super(),this.enabled=!0,this.movementSpeed=1,this.quickenSpeed=10,this.space="local",this.forwrad=new h(0,0,-1),this.extendKeyDown=()=>{},this.extendKeyUp=()=>{},this.moveForward=!1,this.moveBackward=!1,this.moveLeft=!1,this.moveRight=!1,this.quicken=!1,this.worldVector=new h,this._onKeyDown=this.onKeyDown.bind(this),this._onKeyUp=this.onKeyUp.bind(this),s===void 0&&(console.warn('THREE.KeyboardMoveControls: The second parameter "domElement" is now mandatory.'),s=document.body),this.object=e,this.domElement=s,window.addEventListener("keydown",this._onKeyDown),window.addEventListener("keyup",this._onKeyUp)}setCamera(e){this.object=e}setDom(e){this.domElement=e}onKeyDown(e){switch(e.code){case"ArrowUp":case"KeyW":this.moveForward=!0;break;case"ArrowLeft":case"KeyA":this.moveLeft=!0;break;case"ArrowDown":case"KeyS":this.moveBackward=!0;break;case"ArrowRight":case"KeyD":this.moveRight=!0;break}e.shiftKey&&(this.quicken=!0),this.extendKeyDown(e)}onKeyUp(e){switch(e.code){case"ArrowUp":case"KeyW":this.moveForward=!1;break;case"ArrowLeft":case"KeyA":this.moveLeft=!1;break;case"ArrowDown":case"KeyS":this.moveBackward=!1;break;case"ArrowRight":case"KeyD":this.moveRight=!1;break}e.shiftKey||(this.quicken=!1),this.extendKeyUp(e)}update(e){if(this.enabled===!1)return;this.dispatchEvent({type:"beforeUpdate",delta:e,object:this.object});const s=e*this.movementSpeed+(this.quicken?this.quickenSpeed*e:0),a=this.space,o=this.object,r=this.worldVector,n=typeof this.forwrad=="object"?this.forwrad:this.forwrad(o),i=o.up;this.moveForward&&(a==="local"?o.translateZ(-s):(r.copy(n),o.position.addScaledVector(r,s))),this.moveBackward&&(a==="local"?o.translateZ(s):(r.copy(n).applyAxisAngle(i,Math.PI),o.position.addScaledVector(r,s))),this.moveLeft&&(a==="local"?o.translateX(-s):(r.copy(n).applyAxisAngle(i,Math.PI/2),o.position.addScaledVector(r,s))),this.moveRight&&(a==="local"?o.translateX(s):(r.copy(n).applyAxisAngle(i,-Math.PI/2),o.position.addScaledVector(r,s))),this.dispatchEvent({type:"afterUpdate",delta:e,object:o})}dispose(){window.removeEventListener("keydown",this._onKeyDown),window.removeEventListener("keyup",this._onKeyUp)}}const E="@vis-three/plugin-keyboard-move-controls",f=l(E),k=function(t={}){let e,s,a;return{name:f,install(o){const r=new w(t.target||o.camera,o.dom);t.movementSpeed&&(r.movementSpeed=t.movementSpeed),t.quickenSpeed&&(r.quickenSpeed=t.quickenSpeed),t.space&&(r.space=t.space),t.forwrad&&(r.forwrad=t.forwrad),t.extendKeyDown&&(r.extendKeyDown=t.extendKeyDown),t.extendKeyUp&&(r.extendKeyUp=t.extendKeyUp),t.beforeUpdate&&r.addEventListener("beforeUpdate",t.beforeUpdate),t.afterUpdate&&r.addEventListener("afterUpdate",t.afterUpdate),o.keyboardMoveControls=r,e=n=>{r.setDom(n.dom)},o.addEventListener(d.SETDOM,e),s=n=>{r.setCamera(n.camera)},o.addEventListener(d.SETCAMERA,s),a=n=>{r.update(n.delta)},o.addEventListener(d.RENDER,a)},dispose(o){var r;t.beforeUpdate&&o.keyboardMoveControls.removeEventListener("beforeUpdate",t.beforeUpdate),t.afterUpdate&&o.keyboardMoveControls.removeEventListener("afterUpdate",t.afterUpdate),o.removeEventListener(d.SETDOM,e),o.removeEventListener(d.SETCAMERA,s),o.removeEventListener(d.RENDER,a),(r=o.keyboardMoveControls)==null||r.dispose(),delete o.keyboardMoveControls}}},m=l(v),U=function(){let t;return{name:m,condition:[f,p],exec(e){t=s=>{e.keyboardMoveControls.update(s.delta)},e.renderManager.addEventListener(c.RENDER,t)},rollback(e){e.renderManager.removeEventListener(c.RENDER,t)}}};export{k as K,U as a};
