import{t as u,b as c,m as p}from"./curve.0ba3d968.js";import{V as v,w as r,f as l,O as h,z as f}from"./three.3f33d046.js";class w extends p{constructor(e){super(),this.dom=e.dom,this.mouse=new v,this.canMouseMove=!0,this.mouseEventTimer=null,this.throttleTime=e.throttleTime||1e3/60;const t=o=>{const i={mouse:{x:this.mouse.x,y:this.mouse.y}};for(const a in o)i[a]=o[a];return i},s=o=>{o.preventDefault(),this.dispatchEvent(t(o))},n=o=>{this.dispatchEvent(t(o))};this.pointerMoveHandler=o=>{this.canMouseMove&&(this.canMouseMove=!1,this.mouseEventTimer=window.setTimeout(()=>{const i=this.mouse,a=this.dom,d=a.getBoundingClientRect();i.x=(o.clientX-d.left)/a.offsetWidth*2-1,i.y=-((o.clientY-d.top)/a.offsetHeight)*2+1,this.canMouseMove=!0,this.dispatchEvent(t(o))},this.throttleTime))},this.mouseDownHandler=n,this.mouseUpHandler=n,this.pointerDownHandler=n,this.pointerUpHandler=n,this.clickHandler=n,this.dblclickHandler=n,this.contextmenuHandler=s}setDom(e){if(this.dom){const t=this.dom;t.removeEventListener("mousedown",this.mouseDownHandler),t.removeEventListener("mouseup",this.mouseUpHandler),t.removeEventListener("pointerdown",this.pointerDownHandler),t.removeEventListener("pointermove",this.pointerMoveHandler),t.removeEventListener("pointerup",this.pointerUpHandler),t.removeEventListener("click",this.clickHandler),t.removeEventListener("dblclick",this.dblclickHandler),t.removeEventListener("contextmenu",this.contextmenuHandler)}return e.addEventListener("mousedown",this.mouseDownHandler),e.addEventListener("mouseup",this.mouseUpHandler),e.addEventListener("pointerdown",this.pointerDownHandler),e.addEventListener("pointermove",this.pointerMoveHandler),e.addEventListener("pointerup",this.pointerUpHandler),e.addEventListener("click",this.clickHandler),e.addEventListener("dblclick",this.dblclickHandler),e.addEventListener("contextmenu",this.contextmenuHandler),this.dom=e,this}getNormalMouse(){return this.mouse}getWorldPosition(e,t,s){if(!s&&(s=new r),e instanceof l){const n=new r(this.mouse.x,this.mouse.y,1).unproject(e).sub(s.setFromMatrixPosition(e.matrixWorld)).normalize();s.add(n.multiplyScalar(t))}else if(e instanceof h){const n=new r(this.mouse.x,this.mouse.y,(e.near+e.far)/(e.near-e.far)).unproject(e);s.set(0,0,-1).transformDirection(e.matrixWorld).add(n.multiplyScalar(t))}else console.warn(`pointer manager can not support this type camera: ${e.type}`);return s}intersectPlane(e,t,s){!s&&(s=new r);const n=new r,o=new f;if(e instanceof l){const i=new r().setFromMatrixPosition(e.matrixWorld);n.set(this.mouse.x,this.mouse.y,1).unproject(e).sub(i).normalize(),o.set(i,n)}else if(e instanceof h){n.set(this.mouse.x,this.mouse.y,(e.near+e.far)/(e.near-e.far)).unproject(e);const i=new r().set(0,0,-1).transformDirection(e.matrixWorld);o.set(n,i)}else console.warn(`pointer manager can not support this type camera: ${e.type}`);return o.intersectPlane(t,s)}}const H="@vis-three/plugin-pointer-manager",E=u(H),M=function(m){let e;return{name:E,install(t){const s=new w(Object.assign(m||{},{dom:t.dom}));e=n=>{s.setDom(n.dom)},t.addEventListener(c.SETDOM,e),t.pointerManager=s},dispose(t){t.removeEventListener(c.SETDOM,e),e=void 0}}};export{M as g,E as w};
