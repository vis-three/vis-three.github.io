import{t as x,a as f}from"./index.202ebdec.js";import{O as P,i as b,j as S,V as c,k as m,l as L,m as v,R as A}from"./three.237d835c.js";import{P as p,C as d,S as u}from"./ShaderPass.02f07bc0.js";import{a as n}from"./index.1d3a6ec0.js";class w extends p{constructor(e,s){super(),this.scene=e,this.camera=s,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,s,r){const i=e.getContext(),t=e.state;t.buffers.color.setMask(!1),t.buffers.depth.setMask(!1),t.buffers.color.setLocked(!0),t.buffers.depth.setLocked(!0);let a,o;this.inverse?(a=0,o=1):(a=1,o=0),t.buffers.stencil.setTest(!0),t.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),t.buffers.stencil.setFunc(i.ALWAYS,a,4294967295),t.buffers.stencil.setClear(o),t.buffers.stencil.setLocked(!0),e.setRenderTarget(r),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(s),this.clear&&e.clear(),e.render(this.scene,this.camera),t.buffers.color.setLocked(!1),t.buffers.depth.setLocked(!1),t.buffers.stencil.setLocked(!1),t.buffers.stencil.setFunc(i.EQUAL,1,4294967295),t.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP),t.buffers.stencil.setLocked(!0)}}class T extends p{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class R{constructor(e,s){if(this.renderer=e,s===void 0){const r=e.getSize(new c);this._pixelRatio=e.getPixelRatio(),this._width=r.width,this._height=r.height,s=new m(this._width*this._pixelRatio,this._height*this._pixelRatio),s.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=s.width,this._height=s.height;this.renderTarget1=s,this.renderTarget2=s.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],d===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),u===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new u(d),this.clock=new L}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,s){this.passes.splice(s,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const s=this.passes.indexOf(e);s!==-1&&this.passes.splice(s,1)}isLastEnabledPass(e){for(let s=e+1;s<this.passes.length;s++)if(this.passes[s].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const s=this.renderer.getRenderTarget();let r=!1;for(let i=0,t=this.passes.length;i<t;i++){const a=this.passes[i];if(a.enabled!==!1){if(a.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(i),a.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),a.needsSwap){if(r){const o=this.renderer.getContext(),h=this.renderer.state.buffers.stencil;h.setFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),h.setFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}w!==void 0&&(a instanceof w?r=!0:a instanceof T&&(r=!1))}}this.renderer.setRenderTarget(s)}reset(e){if(e===void 0){const s=this.renderer.getSize(new c);this._pixelRatio=this.renderer.getPixelRatio(),this._width=s.width,this._height=s.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,s){this._width=e,this._height=s;const r=this._width*this._pixelRatio,i=this._height*this._pixelRatio;this.renderTarget1.setSize(r,i),this.renderTarget2.setSize(r,i);for(let t=0;t<this.passes.length;t++)this.passes[t].setSize(r,i)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new P(-1,1,1,-1,0,1);const g=new b;g.setAttribute("position",new S([-1,3,0,-1,-1,0,3,-1,0],3));g.setAttribute("uv",new S([0,2,0,0,2,0],2));class B extends p{constructor(e,s,r,i,t){super(),this.scene=e,this.camera=s,this.overrideMaterial=r,this.clearColor=i,this.clearAlpha=t!==void 0?t:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new v}render(e,s,r){const i=e.autoClear;e.autoClear=!1;let t,a;this.overrideMaterial!==void 0&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),t=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:r),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,t),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=a),e.autoClear=i}}const k="@vis-three/plugin-effect-composer",_=x(k),D=function(l={}){let e,s,r,i;return{name:_,deps:n,install(t){let a;if(l.MSAA){const h=t.webGLRenderer,E=h.getPixelRatio(),C=h.getDrawingBufferSize(new c);a=new R(h,new m(C.width*E,C.height*E,{format:l.format||A,samples:l.samples||4}))}else a=new R(t.webGLRenderer);t.effectComposer=a;const o=new B(t.scene,t.camera);if(a.addPass(o),l.MSAA){const h=new u(d);a.addPass(h)}e=h=>{o.camera=h.camera},t.addEventListener(f.SETCAMERA,e),r=h=>{o.scene=h.scene},t.addEventListener(f.SETSCENE,r),s=h=>{a.setSize(h.width,h.height)},t.addEventListener(f.SETSIZE,s),console.warn(`${_}: hope install close behind the ${n}, because ${n}\`s renderFun can be dispose. if you not do this, render are prone to bugs`),t.popLatestEvent(f.RENDER),i=()=>{a.render()},t.addEventListener(f.RENDER,i)},dispose(t){t.removeEventListener(f.SETCAMERA,e),t.addEventListener(f.SETSCENE,r),t.addEventListener(f.SETSIZE,s),t.removeEventListener(f.RENDER,i),delete t.effectComposer}}};export{D as E,_ as a};
