import"../modulepreload-polyfill.b7f2da20.js";/* empty css               */import{c as E,bx as y,c3 as x,aF as L,c4 as b,c5 as C,a2 as m,C as d,ah as s,bV as N,bW as T,bX as G,bY as B,bZ as S,R as v,b_ as W,b$ as A,c0 as I,c1 as H,c2 as w,x as D,a5 as V,N as g,d as c,ad as q,af as U,ae as j,ag as P}from"../three.837c9bb0.js";import{M as _}from"../index.7ee6895f.js";import{g as t}from"../vis-three.middleware.es.2e80d21b.js";import{g as k}from"../lil-gui.module.min.095a7f3d.js";import"../index.1d7ad8b9.js";import"../index.7d48aff8.js";import"../index.388dadd4.js";import"../Pass.1ae4f2a0.js";import"../index.763ed6df.js";import"../index.62992928.js";import"../index.f4f5b765.js";import"../index.a87f8394.js";import"../index.9a7b1aa5.js";import"../index.8de980d1.js";import"../index.9f3e0a95.js";import"../vis-three.plugin-keyboard-manager.es.9570acee.js";import"../Antdv.a86c3c0d.js";import"../index.dfadcd6f.js";import"../CSS3DRenderer.d266155a.js";import"../index.9c42f01c.js";import"../index.ddb76977.js";import"../index.b828c96c.js";import"../index.cfcd8596.js";import"../index.f7cac396.js";import"../index.9dfaa1ec.js";import"../index.ce95ade9.js";import"../vis-three.plugin-pointer-manager.es.86f17451.js";import"../index.484afc60.js";import"../index.29f340c8.js";import"../index.cfa4ec79.js";import"../index.ec2b829b.js";import"../index.aa7ffc23.js";import"../vis-three.module-animation-action.es.09a94f96.js";import"../UnrealBloomPass.caa1ad7b.js";import"../index.4192aafc.js";import"../vis-three.convenient.es.83638baf.js";import"../index.e327b72e.js";import"../vis-three.strategy-orbit-controls-support.es.7f0e9f15.js";import"../vis-three.library-parser.es.80d54b6a.js";import"../vis-three.strategy-multi-renderer.es.c7860e7e.js";import"../vis-three.plugin-loader-manager.es.7fbd57ff.js";import"../G6.7a2bba98.js";const r=new _().setDom(document.getElementById("app")).setSize().setStats(!0).play();t.injectEngine=r;const l=t("Scene");r.setSceneBySymbol(l.vid);t.injectScene=!0;r.loaderManager.setPath("/examples/");r.loadResourcesAsync(["/texture/hdr/livingRoom.hdr","/texture/dds/Tire_N02-dxt.dds"]).then(R=>{console.log(R);const e=r.generateLoadTextureConfig("/texture/hdr/livingRoom.hdr"),i=r.generateLoadTextureConfig("/texture/dds/Tire_N02-dxt.dds");console.log(r.getObjectBySymbol(i.vid));const u=t("MeshBasicMaterial",{map:e.vid}),F=t("MeshBasicMaterial",{map:i.vid}),M=t("BoxGeometry",{width:20,height:20,depth:20}),h=t("SphereGeometry",{radius:10});t("Mesh",{geometry:M.vid,material:F.vid,position:{x:-25}}),t("Mesh",{geometry:h.vid,material:u.vid,position:{x:25}}),l.background=e.vid;const a=new k;a.add(e,"mapping",{UVMapping:E,CubeReflectionMapping:y,CubeRefractionMapping:x,EquirectangularReflectionMapping:L,EquirectangularRefractionMapping:b,CubeUVReflectionMapping:C}),a.add(e,"wrapS",{"THREE.RepeatWrapping":m,"THREE.ClampToEdgeWrapping":d,"THREE.MirroredRepeatWrapping":s}),a.add(e,"wrapT",{"THREE.RepeatWrapping":m,"THREE.ClampToEdgeWrapping":d,"THREE.MirroredRepeatWrapping":s}),a.add(e,"format",{AlphaFormat:N,RedFormat:T,RedIntegerFormat:G,RGFormat:B,RGIntegerFormat:S,RGBAFormat:v,RGBAIntegerFormat:W,LuminanceFormat:A,LuminanceAlphaFormat:I,DepthFormat:H,DepthStencilFormat:w}),a.add(e,"encoding",{LinearEncoding:D,sRGBEncoding:V}),a.add(e,"magFilter",{Nearest:g,Linear:c}),a.add(e,"minFilter",{Nearest:g,Linear:c,NearestMipmapNearest:q,NearestMipmapLinear:U,LinearMipmapNearest:j,LinearMipmapLinear:P}),a.add(e,"rotation",-Math.PI,Math.PI,.01),a.add({anisotropy:e.anisotropy},"anisotropy",1,5,1).onChange(f=>{e.anisotropy=2**f});const o=a.addFolder("repeat");o.add(e.repeat,"x",1,5,1),o.add(e.repeat,"y",1,5,1);const p=a.addFolder("offset");p.add(e.offset,"x",-1,1,.1),p.add(e.offset,"y",-1,1,.1);const n=a.addFolder("center");n.add(e.center,"x",-1,1,.1),n.add(e.center,"y",-1,1,.1)});
