import"../modulepreload-polyfill.b7f2da20.js";import{M as p}from"../index.1133522a.js";import{g as t,v as o,a as r}from"../vis-three.tdcm.es.ba892fff.js";import{g as n}from"../lil-gui.module.min.2435205c.js";import"../three.3f33d046.js";import"../index.c0df7946.js";import"../curve.0ba3d968.js";import"../index.0317c091.js";import"../ShaderPass.025732a5.js";import"../vis-three.plugin-orbit-controls.es.1508a7f8.js";import"../index.98a0d82e.js";import"../index.ca8957d4.js";import"../index.bdebbb5d.js";import"../index.5b5c1015.js";import"../index.336b965b.js";import"../vis-three.plugin-transform-controls.es.5244fee5.js";import"../index.9b9e13dd.js";import"../vis-three.plugin-keyboard-manager.es.16e92de2.js";import"../Antdv.7b6104cc.js";import"../index.fd7db63a.js";import"../CSS3DRenderer.56d2804d.js";import"../index.0a430562.js";import"../index.fe593856.js";import"../index.cee1ad1a.js";import"../index.e2e75f8b.js";import"../index.f411c2bc.js";import"../index.457fa50b.js";import"../index.b5597af3.js";import"../vis-three.plugin-pointer-manager.es.28277630.js";import"../index.2c9e736c.js";import"../index.bbdc45c2.js";import"../index.e7386c00.js";import"../index.82f2a702.js";import"../index.82346856.js";import"../vis-three.module-particle.es.2f619925.js";import"../UnrealBloomPass.a03f7d16.js";import"../vis-three.library-modifier.es.9bf56217.js";import"../vis-three.convenient.es.3345d486.js";import"../index.f17582aa.js";import"../vis-three.strategy-orbit-controls-support.es.bfc29c0d.js";import"../index.4caff7a1.js";import"../vis-three.module-helper.es.c2fc8b4c.js";import"../vis-three.library-parser.es.0233fa92.js";import"../vis-three.strategy-multi-renderer.es.91c74cfe.js";import"../vis-three.strategy-selection-prompt.es.9e058aa8.js";import"../vis-three.plugin-loader-manager.es.3fc670d5.js";import"../G6.30609706.js";const e=new p().setDom(document.getElementById("app")).setSize().setStats(!0).play();t.injectEngine=e;const a=t("Scene"),s=t("PerspectiveCamera",{near:1,far:1e3,position:{x:100,y:200,z:200}});e.setSceneBySymbol(o(a)).setCameraBySymbol(o(s)).setSize();t.injectScene=!0;t("DirectionalLight",{position:{x:30,y:10},intensity:2});const c=t(r.MESHSTANDARDMATERIAL,{color:"red"}),l=t(r.BOXGEOMETRY,{height:20,width:10}),E=t(r.PATH,{curves:[{curve:"line",params:[-100,-100,150,-100]},{curve:"line",params:[150,-100,100,0]},{curve:"line",params:[100,0,100,100]}],autoClose:!0}),g=t(r.SHAPE,{shape:o(E)}),h=t(r.EXTRUDEGEOMETRY,{shapes:o(g),options:{bevelEnabled:!1}});for(let i=0;i<200;i+=1)t(r.MESH,{material:o(c),geometry:o(l),position:{y:10,x:Math.random()*100*(Math.random()<.5?-1:1),z:Math.random()*100*(Math.random()<.5?-1:1)}});const m=t(r.PLANEGEOMETRY,{width:500,height:500}),y=t(r.REFLECTOR,{geometry:o(m),rotation:{x:-Math.PI/2}});window.engine=e;const d=new n;d.add(y,"geometry",[o(m),o(h)]);e.setSize();
