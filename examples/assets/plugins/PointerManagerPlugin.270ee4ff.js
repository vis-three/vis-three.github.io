import"../modulepreload-polyfill.b7f2da20.js";import{h as d,O as l,M as t,B as i,a9 as a,bJ as g,q as s}from"../three.837c9bb0.js";import{W as w,C as h}from"../index.1d7ad8b9.js";import{G as P}from"../index.9a7b1aa5.js";import{d as u}from"../index.7d48aff8.js";import{P as C}from"../vis-three.plugin-pointer-manager.es.86f17451.js";const e=u({plugins:[w({antialias:!0,alpha:!0}),h(),P(),C()]}).setDom(document.getElementById("app")).setSize(),c=e.scene,r=new d(45,window.innerWidth/window.innerHeight,1,1e3);r.position.set(50,50,50);r.lookAt(0,0,0);const n=new l(-window.innerWidth,window.innerWidth,window.innerHeight,-window.innerHeight,0,1e5);n.zoom=5;n.updateProjectionMatrix();n.position.copy(r.position);n.lookAt(0,0,0);const m=new t(new i(1,1,1),new a({color:"rgb(255, 255, 0)"}));c.add(m);const p=new t(new i(10,10,10).translate(0,5,0),new a({color:"rgb(255, 105, 100)"}));c.add(p);e.render();const o=new s,M=new g(new s(0,1,0));e.pointerManager.addEventListener("pointermove",()=>{e.pointerManager.getWorldPosition(e.camera,50,o),m.position.copy(o),e.pointerManager.intersectPlane(e.camera,M,o),p.position.copy(o),e.render()});document.getElementById("PerspectiveCamera").onclick=()=>{e.setCamera(r),e.render()};document.getElementById("OrthographicCamera").onclick=()=>{e.setCamera(n),e.render()};document.getElementById("PerspectiveCamera").click();
