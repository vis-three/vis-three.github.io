import"../modulepreload-polyfill.b7f2da20.js";import{P as z,g as l,a as d}from"../vis-three.middleware.es.7f273029.js";import{M as G}from"../index.790bec74.js";import{t as A,a as v}from"../index.202ebdec.js";import{bA as b,u as x,r as T,b as I,i as y,_,b4 as D,n as u,Q as H,Y as w,bJ as C,K as O,am as R,bT as L}from"../three.237d835c.js";import{C as P}from"../vis-three.convenient.es.7b860830.js";import{a as N}from"../vis-three.plugin-pointer-manager.es.640cfa1a.js";import"../vis-three.plugin-loader-manager.es.c1771985.js";import"../index.c35e5a3e.js";import"../index.e6be8a02.js";import"../G6.d44f13fb.js";import"../Antdv.414c4eb5.js";import"../index.1d3a6ec0.js";import"../index.2e2f06f6.js";import"../ShaderPass.02f07bc0.js";import"../vis-three.plugin-orbit-controls.es.9991f892.js";import"../index.f318ae8c.js";import"../index.4ec3bfd2.js";import"../index.ea2b9d59.js";import"../index.591a8368.js";import"../index.a30a6c1f.js";import"../index.12fd638d.js";import"../index.32dc3bb0.js";import"../vis-three.plugin-keyboard-manager.es.417ffa7e.js";import"../index.edc751ad.js";import"../CSS3DRenderer.ba0f6fa5.js";import"../index.2f498209.js";import"../index.117a61e1.js";import"../index.3b8dbf96.js";import"../index.c0475655.js";import"../index.2328f892.js";import"../index.cd2c2c2e.js";import"../index.a089cc34.js";import"../index.bca5cc71.js";import"../index.692e1021.js";import"../index.90db9154.js";import"../vis-three.module-particle.es.8e43cbb8.js";import"../UnrealBloomPass.2cdbe9ee.js";import"../index.ee52b7bf.js";import"../index.bdaae9f1.js";import"../vis-three.strategy-orbit-controls-support.es.706978dc.js";import"../index.d3463d42.js";import"../vis-three.library-parser.es.5c9e4dac.js";import"../vis-three.strategy-multi-renderer.es.a35ffd0a.js";import"../vis-three.strategy-selection-prompt.es.fc4c19e4.js";var j=Object.defineProperty,U=(e,t,s)=>t in e?j(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,a=(e,t,s)=>(U(e,typeof t!="symbol"?t+"":t,s),s);const B="@vis-three/plugin-path-support-controls",F=new b(new P({width:32,height:32}).draw(e=>{e.beginPath(),e.fillStyle="rgba(0, 0, 0, 0)",e.fillRect(0,0,32,32),e.closePath(),e.beginPath(),e.fillStyle="rgb(0, 255, 238)",e.strokeStyle="black",e.lineWidth=1,e.arc(16,16,15,0,2*Math.PI),e.stroke(),e.fill(),e.closePath()}).getDom()),Y=new b(new P({width:32,height:32}).draw(e=>{e.beginPath(),e.fillStyle="rgba(0, 0, 0, 0)",e.fillRect(0,0,32,32),e.closePath(),e.beginPath(),e.fillStyle="rgb(255, 248, 0)",e.strokeStyle="black",e.lineWidth=1,e.arc(16,16,15,0,2*Math.PI),e.stroke(),e.fill(),e.closePath()}).getDom());new b(new P({width:32,height:32}).draw(e=>{e.beginPath(),e.fillStyle="rgba(0, 0, 0, 0)",e.fillRect(0,0,32,32),e.closePath(),e.beginPath(),e.fillStyle="rgb(255, 0, 0)",e.strokeStyle="black",e.lineWidth=1,e.moveTo(1,0),e.lineTo(31,16),e.lineTo(0,31),e.lineTo(1,0),e.stroke(),e.fill(),e.closePath()}).getDom());const g=class extends x{constructor(e,t,s,o){super(),a(this,"dragging",!1),a(this,"raycaster",new T),a(this,"anchorGizmo",new I(new y,g.anchorMaterial)),a(this,"moveGizmo",new I(new y,g.moveMaterial)),a(this,"moveHelper",new _(new y,g.moveHelperMaterial)),a(this,"plane",new D),a(this,"pointerManager"),a(this,"cachePlaneVector3",new u),a(this,"cacheQuaternion",new H),a(this,"cacheNormal",new u),a(this,"cachePosition",new u),a(this,"cacheMouseDownPoistion",new u),a(this,"cacheMouseMoveDirection",new u),a(this,"cacheConfigIndex",0),a(this,"moveCurveIndexMap",{}),a(this,"helperRangeMap",{}),a(this,"currentGuizmo"),a(this,"currentIndex",0),a(this,"domElement"),a(this,"camera"),a(this,"config"),a(this,"object"),a(this,"cacheObjectInvert"),a(this,"_pointerHover",this.pointerHover.bind(this)),a(this,"_pointerMove",this.pointerMove.bind(this)),a(this,"_pointerDown",this.pointerDown.bind(this)),a(this,"_pointerUp",this.pointerUp.bind(this)),this.anchorGizmo.type="PathSupportControlsAnchorGizmo",this.moveGizmo.type="PathSupportControlsMoveGizmo",this.moveHelper.type="PathSupportControlsMoveHelper",this.moveHelper.raycast=()=>{},this.add(this.anchorGizmo,this.moveGizmo,this.moveHelper),this.renderOrder=1/0,this.matrixAutoUpdate=!1,s&&this.setObject(s),o&&this.setConfig(o),this.setDom(t).setCamera(e).connect()}setDom(e){return this.domElement&&this.disconnect(),this.domElement=e,this.connect(),this}setCamera(e){return this.camera=e,this}setObject(e){return this.object=e,this.matrix=e.matrix,this.matrixWorld=e.matrixWorld,this.cacheObjectInvert=e.matrixWorld.clone().invert(),e.parent.add(this),this}setConfig(e){this.config=e,this.moveCurveIndexMap={},this.helperRangeMap={};const t=this.moveCurveIndexMap,s=this.helperRangeMap,o=[],i=[],n=[];this.config.curves.forEach((r,h,p)=>{h===p.length-1?o.push(r.params[0],r.params[1],0,r.params[r.params.length-2],r.params[r.params.length-1],0):o.push(r.params[0],r.params[1],0),r.curve==="arc"?(i.push(r.params[2],r.params[3],0),t[i.length/3-1]={segmentIndex:h,type:"c1"}):r.curve==="bezier"?(i.push(r.params[2],r.params[3],0),n.push(r.params[0],r.params[1],0,r.params[2],r.params[3],0),t[i.length/3-1]={segmentIndex:h,type:"c1"},i.push(r.params[4],r.params[5],0),n.push(r.params[r.params.length-2],r.params[r.params.length-1],0,r.params[4],r.params[5],0),t[i.length/3-1]={segmentIndex:h,type:"c2"},s[h]={startIndex:n.length/3-4,previous:!1},s[h+1]={startIndex:n.length/3-4,previous:!0}):r.curve==="quadratic"&&(i.push(r.params[2],r.params[3],0),n.push(r.params[0],r.params[1],0,r.params[2],r.params[3],0,r.params[r.params.length-2],r.params[r.params.length-1],0,r.params[2],r.params[3],0),t[i.length/3-1]={segmentIndex:h,type:"c1"},s[h]={startIndex:n.length/3-4,previous:!1},s[h+1]={startIndex:n.length/3-4,previous:!0})});const c=function(r,h){const p=r.geometry;p.setAttribute("position",new R(new Float32Array(h),3).setUsage(L)),p.getAttribute("position").needsUpdate=!0,p.computeBoundingBox(),p.computeBoundingSphere()};return c(this.anchorGizmo,o),c(this.moveGizmo,i),c(this.moveHelper,n),this}update(){this.setConfig(this.config)}updateHelper(e){const t=this.helperRangeMap;if(t[e]!==void 0){const{startIndex:s,previous:o}=t[e],i=o?this.config.curves[e-1]:this.config.curves[e],n=this.moveHelper.geometry.getAttribute("position");i.curve==="bezier"?(n.setXYZ(s,i.params[0],i.params[1],0),n.setXYZ(s+1,i.params[2],i.params[3],0),n.setXYZ(s+2,i.params[i.params.length-2],i.params[i.params.length-1],0),n.setXYZ(s+3,i.params[4],i.params[5],0)):i.curve==="quadratic"&&(n.setXYZ(s,i.params[0],i.params[1],0),n.setXYZ(s+1,i.params[2],i.params[3],0),n.setXYZ(s+2,i.params[i.params.length-2],i.params[i.params.length-1],0),n.setXYZ(s+3,i.params[2],i.params[3],0)),n.needsUpdate=!0}return this}use(e){this.pointerManager=e}connect(){return this.object&&this.config&&(this.domElement.addEventListener("pointermove",this._pointerHover),this.domElement.addEventListener("mousedown",this._pointerDown)),this}disconnect(){return this.domElement.removeEventListener("pointermove",this._pointerHover),this.domElement.removeEventListener("mousedown",this._pointerDown),this}dispose(){const e=t=>{t.geometry.dispose(),Array.isArray(t.material)?t.material.forEach(s=>{s.dispose()}):t.material.dispose()};e(this.anchorGizmo),e(this.moveGizmo)}intersectPoint(e){this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera);const t=this.raycaster.intersectObject(this,!0);return t.length?(this.currentGuizmo=t[0].object,this.currentIndex=t[0].index,{guizmo:this.currentGuizmo,index:this.currentIndex}):null}intersectPlane(e){return this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera),this.raycaster.ray.intersectPlane(this.plane,this.cachePlaneVector3)}pointerHover(e){if(this.dragging||!this.visible)return;const t=this.intersectPoint(e);Number.isInteger(t==null?void 0:t.index)?this.domElement.style.cursor="move":this.domElement.style.cursor=""}pointerDown(e){if(!this.visible)return;if(this.cacheQuaternion.setFromRotationMatrix(this.object.matrixWorld),this.cacheNormal.set(0,0,1).applyQuaternion(this.cacheQuaternion),this.cachePosition.setFromMatrixPosition(this.object.matrixWorld),this.plane.set(this.cacheNormal,this.cachePosition.projectOnVector(this.cacheNormal).length()),this.intersectPoint(e)){this.dragging=!0,this.cacheMouseDownPoistion.copy(this.intersectPlane(e)).sub(this.cachePosition);const s=this.currentIndex===this.config.curves.length?this.currentIndex-1:this.currentIndex;this.dispatchEvent({type:"mousedown",index:s,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:this.currentGuizmo===this.moveGizmo?"move":"anchor"}),this.cacheConfigIndex=s,this.domElement.addEventListener("mousemove",this._pointerMove),this.domElement.addEventListener("mouseup",this._pointerUp)}}pointerMove(e){if(!this.visible&&!this.dragging)return;const t=this.intersectPlane(e);if(!t)return;t.sub(this.cachePosition).applyMatrix4(this.cacheObjectInvert),this.cacheMouseMoveDirection.copy(t).sub(this.cacheMouseDownPoistion).normalize();const s=this.currentGuizmo,o=this.currentIndex,i=this.config,n=this.cacheConfigIndex;if(s===this.anchorGizmo){const c=i.curves.length;if(o!==i.curves.length){const p=i.curves[o];p.params[0]=t.x,p.params[1]=t.y,this.updateHelper(o)}else{const p=i.curves[c-1];p.params[p.params.length-2]=t.x,p.params[p.params.length-1]=t.y,this.updateHelper(c-1)}const r=this.anchorGizmo.geometry.getAttribute("position"),h=r.array;h[o*3]=t.x,h[o*3+1]=t.y,r.needsUpdate=!0,this.dispatchEvent({type:"changing",index:n,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:"anchor"})}else if(s===this.moveGizmo){const c=this.moveCurveIndexMap[o].segmentIndex,r=i.curves[c],h=this.moveCurveIndexMap[o].type;h==="c1"?(r.params[2]=t.x,r.params[3]=t.y):h==="c2"&&(r.params[4]=t.x,r.params[5]=t.y);const p=this.moveGizmo.geometry.getAttribute("position"),M=p.array;M[o*3]=t.x,M[o*3+1]=t.y,p.needsUpdate=!0,this.updateHelper(c),this.dispatchEvent({type:"changing",index:n,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:"move"})}}pointerUp(e){this.dragging=!1,this.domElement.removeEventListener("mousemove",this._pointerMove),this.domElement.removeEventListener("mouseup",this._pointerUp),this.currentGuizmo&&(this.currentGuizmo.geometry.computeBoundingSphere(),this.currentGuizmo.geometry.computeBoundingBox()),this.dispatchEvent({type:"mouseup",index:this.cacheConfigIndex,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:this.currentGuizmo===this.anchorGizmo?"anchor":"move"})}};let f=g;a(f,"anchorMaterial",new w({map:F,transparent:!0,depthFunc:C,alphaTest:.01,sizeAttenuation:!1,size:15}));a(f,"moveMaterial",new w({map:Y,transparent:!0,depthFunc:C,alphaTest:.01,sizeAttenuation:!1,size:15}));a(f,"moveHelperMaterial",new O({color:"rgb(100, 100, 100)"}));const k=A(B),W=function(e={}){let t,s;return{name:k,deps:[...z,N],install(o){const i=new f(o.camera,o.dom);e.raycaster&&e.raycaster.params&&Object.assign(i.raycaster.params,e.raycaster.params),i.use(o.pointerManager),o.pathSupportControls=i,s=n=>{i.setDom(n.dom)},t=n=>{i.setCamera(n.camera)},o.addEventListener(v.SETDOM,s),o.addEventListener(v.SETCAMERA,t)},dispose(o){o.removeEventListener(v.SETDOM,s),o.removeEventListener(v.SETCAMERA,t),o.pathSupportControls.disconnect().dispose(),delete o.pathSupportControls}}},m=new G().rollback("SelectionPromptStrategy").uninstall("TransformControlsPlugin").install(W()).setDom(document.getElementById("app")).setSize().play();l.injectEngine=m;const X=l(d.ORTHOGRAPHICCAMERA,{far:1e3,near:0,zoom:20,position:{z:100}}),S=l("Scene");m.setSceneBySymbol(S.vid);m.setCameraBySymbol(X.vid);l.injectScene=!0;window.scene=S;const E=l(d.PATH,{autoClose:!1,curves:[{curve:"line",params:[0,0,10,10]},{curve:"quadratic",params:[10,10,-15,15,15,0]},{curve:"line",params:[15,0,-10,-10]},{curve:"arc",params:[-10,-10,-19,-30,10,-10]},{curve:"bezier",params:[10,-10,15,-10,10,15,20,10]},{curve:"arc",params:[20,10,40,0,30,-10]}]}),Z=l(d.PATHGEOMETRY,{path:E.vid,space:!1}),Q=l(d.LINEBASICMATERIAL,{}),V=l(d.LINE,{material:Q.vid,geometry:Z.vid});m.pathSupportControls.setObject(m.getObjectBySymbol(V.vid)).setConfig(E).connect();m.scene.add(m.pathSupportControls);window.engine=m;document.getElementById("deletePath").onclick=()=>{E.curves.splice(1,2),m.pathSupportControls.update()};
