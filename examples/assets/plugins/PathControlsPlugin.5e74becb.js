import"../modulepreload-polyfill.b7f2da20.js";import{P as G,g as c,q as u}from"../vis-three.tdcm.es.ba892fff.js";import{M as j}from"../index.1133522a.js";import{t as A,b as d}from"../curve.0ba3d968.js";import{bX as x,G as H,E as O,b as P,J as f,a8 as D,br as L,w as g,Q as Y,a6 as w,c6 as M,a4 as B,ag as R,cf as X}from"../three.3f33d046.js";import{H as E}from"../vis-three.convenient.es.3345d486.js";import{w as Z}from"../vis-three.plugin-pointer-manager.es.28277630.js";import"../vis-three.plugin-loader-manager.es.3fc670d5.js";import"../index.b5597af3.js";import"../index.0a430562.js";import"../G6.30609706.js";import"../Antdv.7b6104cc.js";import"../index.c0df7946.js";import"../index.0317c091.js";import"../ShaderPass.025732a5.js";import"../vis-three.plugin-orbit-controls.es.1508a7f8.js";import"../index.98a0d82e.js";import"../index.ca8957d4.js";import"../index.bdebbb5d.js";import"../index.5b5c1015.js";import"../index.336b965b.js";import"../vis-three.plugin-transform-controls.es.5244fee5.js";import"../index.9b9e13dd.js";import"../vis-three.plugin-keyboard-manager.es.16e92de2.js";import"../index.fd7db63a.js";import"../CSS3DRenderer.56d2804d.js";import"../index.fe593856.js";import"../index.cee1ad1a.js";import"../index.e2e75f8b.js";import"../index.f411c2bc.js";import"../index.457fa50b.js";import"../index.2c9e736c.js";import"../index.bbdc45c2.js";import"../index.e7386c00.js";import"../index.82f2a702.js";import"../index.82346856.js";import"../vis-three.module-particle.es.2f619925.js";import"../UnrealBloomPass.a03f7d16.js";import"../vis-three.library-modifier.es.9bf56217.js";import"../index.f17582aa.js";import"../vis-three.strategy-orbit-controls-support.es.bfc29c0d.js";import"../index.4caff7a1.js";import"../vis-three.module-helper.es.c2fc8b4c.js";import"../vis-three.library-parser.es.0233fa92.js";import"../vis-three.strategy-multi-renderer.es.91c74cfe.js";import"../vis-three.strategy-selection-prompt.es.9e058aa8.js";const k="@vis-three/plugin-path-support-controls",U=new x(new E({width:32,height:32}).draw(r=>{r.beginPath(),r.fillStyle="rgba(0, 0, 0, 0)",r.fillRect(0,0,32,32),r.closePath(),r.beginPath(),r.fillStyle="rgb(0, 255, 238)",r.strokeStyle="black",r.lineWidth=1,r.arc(16,16,15,0,2*Math.PI),r.stroke(),r.fill(),r.closePath()}).getDom()),N=new x(new E({width:32,height:32}).draw(r=>{r.beginPath(),r.fillStyle="rgba(0, 0, 0, 0)",r.fillRect(0,0,32,32),r.closePath(),r.beginPath(),r.fillStyle="rgb(255, 248, 0)",r.strokeStyle="black",r.lineWidth=1,r.arc(16,16,15,0,2*Math.PI),r.stroke(),r.fill(),r.closePath()}).getDom());new x(new E({width:32,height:32}).draw(r=>{r.beginPath(),r.fillStyle="rgba(0, 0, 0, 0)",r.fillRect(0,0,32,32),r.closePath(),r.beginPath(),r.fillStyle="rgb(255, 0, 0)",r.strokeStyle="black",r.lineWidth=1,r.moveTo(1,0),r.lineTo(31,16),r.lineTo(0,31),r.lineTo(1,0),r.stroke(),r.fill(),r.closePath()}).getDom());const v=class y extends H{constructor(i,a,s,o){super(),this.dragging=!1,this.raycaster=new O,this.anchorGizmo=new P(new f,y.anchorMaterial),this.moveGizmo=new P(new f,y.moveMaterial),this.moveHelper=new D(new f,y.moveHelperMaterial),this.plane=new L,this.cachePlaneVector3=new g,this.cacheQuaternion=new Y,this.cacheNormal=new g,this.cachePosition=new g,this.cacheMouseDownPoistion=new g,this.cacheMouseMoveDirection=new g,this.cacheConfigIndex=0,this.moveCurveIndexMap={},this.helperRangeMap={},this.currentIndex=0,this.pathType=2,this._pointerHover=this.pointerHover.bind(this),this._pointerMove=this.pointerMove.bind(this),this._pointerDown=this.pointerDown.bind(this),this._pointerUp=this.pointerUp.bind(this),this.anchorGizmo.type="PathSupportControlsAnchorGizmo",this.moveGizmo.type="PathSupportControlsMoveGizmo",this.moveHelper.type="PathSupportControlsMoveHelper",this.moveHelper.raycast=()=>{},this.add(this.anchorGizmo,this.moveGizmo,this.moveHelper),this.renderOrder=1/0,this.matrixAutoUpdate=!1,s&&this.setObject(s),o&&this.setConfig(o),this.setDom(a).setCamera(i).connect()}setDom(i){return this.domElement&&this.disconnect(),this.domElement=i,this.connect(),this}setCamera(i){return this.camera=i,this}setObject(i){return this.object=i,this.matrix=i.matrix,this.matrixWorld=i.matrixWorld,this.cacheObjectInvert=i.matrixWorld.clone().invert(),i.parent.add(this),this}setConfig(i){this.config=i,this.moveCurveIndexMap={},this.helperRangeMap={};const a=this.moveCurveIndexMap,s=this.helperRangeMap,o=[],t=[],n=[];this.config.type==="Path"?(this.pathType=2,this.config.curves.forEach((e,p,m)=>{p===m.length-1?o.push(e.params[0],e.params[1],0,e.params[e.params.length-2],e.params[e.params.length-1],0):o.push(e.params[0],e.params[1],0),e.curve==="arc"?(t.push(e.params[2],e.params[3],0),a[t.length/3-1]={segmentIndex:p,type:"c1"}):e.curve==="bezier"||e.curve==="cubic"?(t.push(e.params[2],e.params[3],0),n.push(e.params[0],e.params[1],0,e.params[2],e.params[3],0),a[t.length/3-1]={segmentIndex:p,type:"c1"},t.push(e.params[4],e.params[5],0),n.push(e.params[e.params.length-2],e.params[e.params.length-1],0,e.params[4],e.params[5],0),a[t.length/3-1]={segmentIndex:p,type:"c2"},s[p]={startIndex:n.length/3-4,previous:!1},s[p+1]={startIndex:n.length/3-4,previous:!0}):e.curve==="quadratic"&&(t.push(e.params[2],e.params[3],0),n.push(e.params[0],e.params[1],0,e.params[2],e.params[3],0,e.params[e.params.length-2],e.params[e.params.length-1],0,e.params[2],e.params[3],0),a[t.length/3-1]={segmentIndex:p,type:"c1"},s[p]={startIndex:n.length/3-4,previous:!1},s[p+1]={startIndex:n.length/3-4,previous:!0})})):this.config.type==="Path3"&&(this.pathType=3,this.config.curves.forEach((e,p,m)=>{p===m.length-1?o.push(e.params[0],e.params[1],e.params[2],e.params[e.params.length-3],e.params[e.params.length-2],e.params[e.params.length-1]):o.push(e.params[0],e.params[1],e.params[2]),e.curve==="cubic"?(t.push(e.params[3],e.params[4],e.params[5]),n.push(e.params[0],e.params[1],e.params[2],e.params[3],e.params[4],e.params[5]),a[t.length/3-1]={segmentIndex:p,type:"c1"},t.push(e.params[6],e.params[7],e.params[8]),n.push(e.params[e.params.length-3],e.params[e.params.length-2],e.params[e.params.length-1],e.params[6],e.params[7],e.params[8]),a[t.length/3-1]={segmentIndex:p,type:"c2"},s[p]={startIndex:n.length/3-4,previous:!1},s[p+1]={startIndex:n.length/3-4,previous:!0}):e.curve==="quadratic"&&(t.push(e.params[3],e.params[4],e.params[5]),n.push(e.params[0],e.params[1],e.params[2],e.params[3],e.params[4],e.params[5],e.params[e.params.length-3],e.params[e.params.length-2],e.params[e.params.length-1],e.params[3],e.params[4],e.params[5]),a[t.length/3-1]={segmentIndex:p,type:"c1"},s[p]={startIndex:n.length/3-4,previous:!1},s[p+1]={startIndex:n.length/3-4,previous:!0})}));const l=function(e,p){const m=e.geometry;m.setAttribute("position",new R(new Float32Array(p),3).setUsage(X)),m.getAttribute("position").needsUpdate=!0,m.computeBoundingBox(),m.computeBoundingSphere()};return l(this.anchorGizmo,o),l(this.moveGizmo,t),l(this.moveHelper,n),this}update(){this.setConfig(this.config)}updateHelper(i){const a=this.helperRangeMap;if(a[i]!==void 0){const{startIndex:s,previous:o}=a[i],t=o?this.config.curves[i-1]:this.config.curves[i],n=this.moveHelper.geometry.getAttribute("position");t.curve==="bezier"||t.curve==="cubic"?this.pathType===2?(n.setXYZ(s,t.params[0],t.params[1],0),n.setXYZ(s+1,t.params[2],t.params[3],0),n.setXYZ(s+2,t.params[t.params.length-2],t.params[t.params.length-1],0),n.setXYZ(s+3,t.params[4],t.params[5],0)):this.pathType===3&&(n.setXYZ(s,t.params[0],t.params[1],t.params[2]),n.setXYZ(s+1,t.params[3],t.params[4],t.params[5]),n.setXYZ(s+2,t.params[t.params.length-3],t.params[t.params.length-2],t.params[t.params.length-1]),n.setXYZ(s+3,t.params[6],t.params[7],t.params[8])):t.curve==="quadratic"&&(this.pathType===2?(n.setXYZ(s,t.params[0],t.params[1],0),n.setXYZ(s+1,t.params[2],t.params[3],0),n.setXYZ(s+2,t.params[t.params.length-2],t.params[t.params.length-1],0),n.setXYZ(s+3,t.params[2],t.params[3],0)):this.pathType===3&&(n.setXYZ(s,t.params[0],t.params[1],t.params[2]),n.setXYZ(s+1,t.params[3],t.params[4],t.params[5]),n.setXYZ(s+2,t.params[t.params.length-3],t.params[t.params.length-2],t.params[t.params.length-1]),n.setXYZ(s+3,t.params[3],t.params[4],t.params[5]))),n.needsUpdate=!0}return this}use(i){this.pointerManager=i}connect(){return this.object&&this.config&&(this.domElement.addEventListener("pointermove",this._pointerHover),this.domElement.addEventListener("mousedown",this._pointerDown)),this}disconnect(){return this.domElement.removeEventListener("pointermove",this._pointerHover),this.domElement.removeEventListener("mousedown",this._pointerDown),this}dispose(){const i=a=>{a.geometry.dispose(),Array.isArray(a.material)?a.material.forEach(s=>{s.dispose()}):a.material.dispose()};i(this.anchorGizmo),i(this.moveGizmo)}intersectPoint(i){this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera);const a=this.raycaster.intersectObject(this,!0);return a.length?(this.currentGuizmo=a[0].object,this.currentIndex=a[0].index,{guizmo:this.currentGuizmo,index:this.currentIndex,point:a[0].point}):null}intersectPlane(i){return this.raycaster.setFromCamera(this.pointerManager.mouse,this.camera),this.raycaster.ray.intersectPlane(this.plane,this.cachePlaneVector3)}pointerHover(i){if(this.dragging||!this.visible)return;const a=this.intersectPoint(i);Number.isInteger(a==null?void 0:a.index)?this.domElement.style.cursor="move":this.domElement.style.cursor=""}pointerDown(i){if(!this.visible||i.button!==0)return;const a=this.intersectPoint(i);if(a){this.dragging=!0,this.pathType===2?(this.cacheQuaternion.setFromRotationMatrix(this.object.matrixWorld),this.cacheNormal.set(0,0,1).applyQuaternion(this.cacheQuaternion),this.cachePosition.setFromMatrixPosition(this.object.matrixWorld),this.plane.set(this.cacheNormal,this.cachePosition.projectOnVector(this.cacheNormal).length())):this.pathType===3&&(this.camera.getWorldPosition(this.plane.normal).sub(a.point).normalize(),this.plane.constant=(a.point.dot(this.plane.normal)>0?1:-1)*a.point.projectOnVector(this.plane.normal).length()),this.cacheMouseDownPoistion.copy(this.intersectPlane(i)).sub(this.cachePosition);const s=this.currentIndex===this.config.curves.length?this.currentIndex-1:this.currentIndex;this.dispatchEvent({type:"mousedown",index:s,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:this.currentGuizmo===this.moveGizmo?"move":"anchor"}),this.cacheConfigIndex=s,this.domElement.addEventListener("mousemove",this._pointerMove),this.domElement.addEventListener("mouseup",this._pointerUp)}}pointerMove(i){if(!this.visible&&!this.dragging)return;const a=this.intersectPlane(i);if(!a)return;a.sub(this.cachePosition).applyMatrix4(this.cacheObjectInvert),this.cacheMouseMoveDirection.copy(a).sub(this.cacheMouseDownPoistion).normalize();const s=this.currentGuizmo,o=this.currentIndex,t=this.config,n=this.cacheConfigIndex;if(s===this.anchorGizmo){const l=t.curves.length;if(o!==t.curves.length){const m=t.curves[o];m.params[0]=a.x,m.params[1]=a.y,this.pathType===3&&(m.params[2]=a.z),this.updateHelper(o)}else{const m=t.curves[l-1];this.pathType===3?(m.params[m.params.length-3]=a.x,m.params[m.params.length-2]=a.y,m.params[m.params.length-1]=a.z):(m.params[m.params.length-2]=a.x,m.params[m.params.length-1]=a.y),this.updateHelper(l-1)}const e=this.anchorGizmo.geometry.getAttribute("position"),p=e.array;p[o*3]=a.x,p[o*3+1]=a.y,this.pathType===3&&(p[o*3+2]=a.z),e.needsUpdate=!0,this.dispatchEvent({type:"changing",index:n,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:"anchor"})}else if(s===this.moveGizmo){const l=this.moveCurveIndexMap[o].segmentIndex,e=t.curves[l],p=this.moveCurveIndexMap[o].type;p==="c1"?this.pathType===2?(e.params[2]=a.x,e.params[3]=a.y):(e.params[3]=a.x,e.params[4]=a.y,e.params[5]=a.z):p==="c2"&&(this.pathType===2?(e.params[4]=a.x,e.params[5]=a.y):(e.params[6]=a.x,e.params[7]=a.y,e.params[8]=a.z));const m=this.moveGizmo.geometry.getAttribute("position"),b=m.array;b[o*3]=a.x,b[o*3+1]=a.y,this.pathType===3&&(b[o*3+2]=a.z),m.needsUpdate=!0,this.updateHelper(l),this.dispatchEvent({type:"changing",index:n,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:"move"})}}pointerUp(i){this.dragging=!1,this.domElement.removeEventListener("mousemove",this._pointerMove),this.domElement.removeEventListener("mouseup",this._pointerUp),this.currentGuizmo&&(this.currentGuizmo.geometry.computeBoundingSphere(),this.currentGuizmo.geometry.computeBoundingBox()),this.dispatchEvent({type:"mouseup",index:this.cacheConfigIndex,config:this.config,last:this.currentIndex===this.config.curves.length,object:this.object,operate:this.currentGuizmo===this.anchorGizmo?"anchor":"move"})}};v.anchorMaterial=new w({map:U,transparent:!0,depthFunc:M,alphaTest:.01,sizeAttenuation:!1,size:15}),v.moveMaterial=new w({map:N,transparent:!0,depthFunc:M,alphaTest:.01,sizeAttenuation:!1,size:15}),v.moveHelperMaterial=new B({color:"rgb(100, 100, 100)"});let W=v;const _=A(k),F=function(r={raycaster:{params:{Line:{threshold:5},Points:{threshold:5}}}}){let i,a;return{name:_,deps:[...G,Z],install(s){const o=new W(s.camera,s.dom);r.raycaster&&r.raycaster.params&&Object.assign(o.raycaster.params,r.raycaster.params),o.use(s.pointerManager),s.pathSupportControls=o,a=t=>{o.setDom(t.dom)},i=t=>{o.setCamera(t.camera)},s.addEventListener(d.SETDOM,a),s.addEventListener(d.SETCAMERA,i)},dispose(s){s.removeEventListener(d.SETDOM,a),s.removeEventListener(d.SETCAMERA,i),s.pathSupportControls.disconnect().dispose(),delete s.pathSupportControls}}},h=new j().rollback("SelectionPromptStrategy").uninstall("TransformControlsPlugin").install(F()).setDom(document.getElementById("app")).setSize().play();c.injectEngine=h;const q=c(u.ORTHOGRAPHICCAMERA,{far:1e3,near:0,zoom:10,position:{z:100}}),z=c("Scene");h.setSceneBySymbol(z.vid);h.setCameraBySymbol(q.vid);c.injectScene=!0;window.scene=z;const I=c(u.PATH,{autoClose:!1,curves:[{curve:"line",params:[-20,40,-10,0]},{curve:"quadratic",params:[-10,0,-5,25,-25,10]},{curve:"arc",params:[-25,10,-40,0,-20,-10]},{curve:"bezier",params:[-20,-10,-15,-10,-10,-15,-20,-35]}]}),C=c(u.PATH3,{autoClose:!1,curves:[{curve:"line",params:[20,40,10,0,20,-10]},{curve:"cubic",params:[0,20,-10,20,20,-10,0,20,20,20,-20,-20]},{curve:"quadratic",params:[20,-20,-20,40,20,-30,40,-20,-10]}]}),Q=c(u.PATHGEOMETRY,{path:I.vid,space:!1}),V=c(u.PATHGEOMETRY,{path:C.vid,space:!1}),S=c(u.LINEBASICMATERIAL,{}),T=c(u.LINE,{material:S.vid,geometry:Q.vid}),J=c(u.LINE,{material:S.vid,geometry:V.vid});h.pathSupportControls.setObject(h.getObjectBySymbol(T.vid)).setConfig(I).connect();h.scene.add(h.pathSupportControls);window.engine=h;document.getElementById("path2").onclick=()=>{h.pathSupportControls.setObject(h.getObjectBySymbol(T.vid)).setConfig(I)};document.getElementById("path3").onclick=()=>{h.pathSupportControls.setObject(h.getObjectBySymbol(J.vid)).setConfig(C)};
