import{_ as s,c as i,o as a,a2 as n}from"./chunks/framework.BjUghlZR.js";const F=JSON.parse('{"title":"自定义配置化模型","description":"","frontmatter":{},"headers":[],"relativePath":"zh/start/model.md","filePath":"zh/start/model.md"}'),h={name:"zh/start/model.md"},k=n(`<h1 id="自定义配置化模型" tabindex="-1">自定义配置化模型 <a class="header-anchor" href="#自定义配置化模型" aria-label="Permalink to &quot;自定义配置化模型&quot;">​</a></h1><h2 id="配置化模型介绍" tabindex="-1">配置化模型介绍 <a class="header-anchor" href="#配置化模型介绍" aria-label="Permalink to &quot;配置化模型介绍&quot;">​</a></h2><p>配置化模型是将配置与<code>3D</code>对象联系起来的模型对象，每当配置变更，或者新增、删除配置时，与之对应的 <code>3D</code> 对象都会完成真实的操作或者对应的业务功能。在响应配置变化的基础上，还集成了许多额外的便利功能去增强配置化的优势。</p><h2 id="案例引导" tabindex="-1">案例引导 <a class="header-anchor" href="#案例引导" aria-label="Permalink to &quot;案例引导&quot;">​</a></h2><p>我们通过一个需求案例来熟悉整个自定义配置化模型流程，比如我们当下有这样一个需求：</p><ul><li><p>需要一个木板配置模块</p></li><li><p>需要场景可以添加删除木板</p></li><li><p>木板有三种尺寸：小、中、大</p></li><li><p>木板还可以设置相关的颜色风格，比如：雅黑，棕黄，奶白</p></li><li><p>木板可以设置他的位置，旋转</p></li></ul><h2 id="配置化模型选项" tabindex="-1">配置化模型选项 <a class="header-anchor" href="#配置化模型选项" aria-label="Permalink to &quot;配置化模型选项&quot;">​</a></h2><p>配置化模型选项是最终定义这个模型的选项单，可以使用下面的<code>defineModel</code>进行定义。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> interface</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> ModelOption</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  Cf</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> extends</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> BasicConfig</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> BasicConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  Obj</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> extends</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> object</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> object</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  Ctx</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> extends</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> object</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> object</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  Srd</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> extends</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> object</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> object</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  Eg</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> extends</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> EngineSupport</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> EngineSupport</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  Cpl</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> extends</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Compiler</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Compiler</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /**模型类型 */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  type</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /**模型的配置结构 */</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  config</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> () </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /**模型实例的共享属性方法 */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  shared</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">?:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Srd</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /**模型实例的特有属性方法 */</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  context</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">?:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">    this</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Readonly</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Srd</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Ctx</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    params</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      model</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Readonly</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Srd</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Ctx</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  ) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Ctx</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /**模型的命令链 */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  commands</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">?:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> ModelCommands</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    Model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Readonly</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Srd</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Ctx</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  &gt;;</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /**模型的生成方法 */</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  create</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">    this</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Readonly</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Srd</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Ctx</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    params</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      model</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Readonly</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Srd</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Ctx</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      config</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      engine</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      compiler</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  ) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /**模型的销毁方法 */</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  dispose</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">    this</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Readonly</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Srd</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Ctx</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    params</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      model</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Readonly</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Srd</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt; </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&amp;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Ctx</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      target</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      puppet</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Obj</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      config</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Cf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      engine</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Eg</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      compiler</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Cpl</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  ) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> void</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /**该模型应用时对其他模型产生的扩展 */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  expand</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">?:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> [</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    {</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      models</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">[] </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">|</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> RegExp</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      config</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> () </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> object</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">      commands</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> ModelCommands</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">any</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">any</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">any</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">any</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">any</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt;;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  ];</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><h2 id="定义模型配置结构" tabindex="-1">定义模型配置结构 <a class="header-anchor" href="#定义模型配置结构" aria-label="Permalink to &quot;定义模型配置结构&quot;">​</a></h2><p>定义模型配置结构可以根据我们的业务需要进行。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// config.ts</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { BasicConfig, getBasicConfig } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;@vis-three/tdcm&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> interface</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> BoardConfig</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> extends</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> BasicConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  parent</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// 木板的父级存储</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  size</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;large&quot;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;medium&quot;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &#39;small&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">; </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// 木板的尺寸</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  style</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;elegant-black&quot;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;light-brown&quot;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> |</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;milky-white&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">; </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// 木板的风格</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  position</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// 木板的位置</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    x</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    y</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    z</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  };</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  rotation</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">// 木板的旋转</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    x</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    y</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    z</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  };</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> getBoardConfig</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> function</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">BoardConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">  return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    ...</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> getBasicConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(),</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    parent: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    size: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&#39;medium&#39;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    style: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;light-brown&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    position: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      x: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      y: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      z: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    rotation: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      x: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      y: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      z: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>我们定义的配置一定要继承<code>BasicConfig</code>接口，因为<code>BasicConfig</code>定义了整个配置化的公共属性，如果你使用的是<code>js</code>,记得调用合并<code>getBasicConfig</code>的返回值。</p></li><li><p>在我们书写生成配置的方法时，也就是上面的<code>getBoardConfig</code>方法，它所<code>return</code>的对象中的属性值，就是我们这个配置的默认值，我们可以根据此特性调整我们的默认生成。</p></li></ul></div><h2 id="定义配置模型" tabindex="-1">定义配置模型 <a class="header-anchor" href="#定义配置模型" aria-label="Permalink to &quot;定义配置模型&quot;">​</a></h2><p>定义配置模型，我们可以通过<code>defineModel</code>这个方法进行：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { defineModel } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;@vis-three/tdcm&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { getBoardConfig } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;./config.ts&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">import</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> { Mesh, BoxGeometry } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">from</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;three&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> default</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> defineModel</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&lt;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  BoardConfig,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  Mesh,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  {},</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    changeSize</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: (</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">size</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Mesh</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> void</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    transColor</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: (</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">style</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> string</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> string;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  type: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;Board&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  config: getBoardConfig,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  shared: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    changeSize</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">size</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> newGeometry</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> BoxGeometry</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        size </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">===</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;large&quot;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> ?</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 100</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> :</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> size </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">===</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;medium&quot;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> ?</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 80</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> :</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 50</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">        30</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        size </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">===</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;large&quot;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> ?</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 50</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> :</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> size </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">===</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;medium&quot;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> ?</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 40</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> :</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 30</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      );</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      target.geometry.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">copy</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(newGeometry);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      newGeometry.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    transColor</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">style</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> style </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">===</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;elegant-black&quot;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        ?</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;rgb(0, 0, 0)&quot;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        :</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> style </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">===</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;light-brown&quot;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        ?</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;rgb(200, 200, 0)&quot;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        :</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;"> &quot;rgb(255, 255, 255)&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  commands: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    set: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      size</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">chageSize</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(value, target);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      style</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        target.material.color.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">setHex</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Color</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">transColor</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(value)).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getHex</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">()</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        );</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  create</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">engine</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> geometry</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> BoxGeometry</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> material</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> MeshBasicMaterial</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      color: model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">transColor</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.style),</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    });</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> board</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Mesh</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(geometry, material);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">changeSize</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.size, board);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    board.position.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.position.x, config.position.y, config.position.z);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    board.rotation.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.rotation.x, config.rotation.y, config.rotation.z);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> board;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">removeFromParent</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.geometry.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.material.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><h2 id="配置类型" tabindex="-1">配置类型 <a class="header-anchor" href="#配置类型" aria-label="Permalink to &quot;配置类型&quot;">​</a></h2><p>配置类型是我们这个处理器需要处理的配置的<code>type</code>类型，他会在处理器实例的时候，注入到配置生成的方法中，所以他会覆盖你在<code>getConfig</code>时所定义的<code>type</code>属性。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>配置类型建议使用大驼峰命名。</p></div><h2 id="共享属性方法" tabindex="-1">共享属性方法 <a class="header-anchor" href="#共享属性方法" aria-label="Permalink to &quot;共享属性方法&quot;">​</a></h2><p>共享的属性方法我们可以放到<code>shared</code>属性中，该属性中的方法可以在<code>create</code>, <code>dispose</code>, <code>commands</code>方法中通过解构的<code>model</code>访问。<code>shared</code>中的属性方法，在<code>model</code>中使用的时候是只读的，不能进行修改。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">defineModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  shared: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    initPositon: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      x: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">10</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      y: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">10</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      z: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">10</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    setInitPosition</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      target.position.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">        this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.initPosition.x,</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">        this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.initPosition.y,</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">        this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.initPosition.z</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      );</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  commands: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    position</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (value.x </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&gt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 100</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        target.position.x </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> model.initPosition.x;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">else</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        target.position.x </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> value.x;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (value.y </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&gt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 200</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">setInitPosition</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(target);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果您想在共享的属性方法中访问其他的共享属性方法，而这些属性方法没有通过参数传入，可以通过<code>this</code>获取。</p></div><h2 id="实例属性方法" tabindex="-1">实例属性方法 <a class="header-anchor" href="#实例属性方法" aria-label="Permalink to &quot;实例属性方法&quot;">​</a></h2><p>实例的属性放啊我们可以放到<code>context</code>属性中，该属性是一个<code>function</code>，可以在构造器访问整个<code>model</code>对象，获取各种属性方法。他们是可以进行修改的，而且一个实例一份，不影响其他实例。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">defineModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  context</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      updateVersion: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      updateMatrix</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: () </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (model.updateVersion </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&gt;=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 10</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        model.puppet.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">updateMatrixWorld</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        model.updateVersion </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">+=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 1</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    };</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><h2 id="命令链与运行时" tabindex="-1">命令链与运行时 <a class="header-anchor" href="#命令链与运行时" aria-label="Permalink to &quot;命令链与运行时&quot;">​</a></h2><p>命令链<code>commands</code>是在整一个配置生成到销毁之间也就是运行期间的所遇到的操作和与之对应的处理方法，命令链包括默认命令和自定义命令。</p><h3 id="默认命令" tabindex="-1">默认命令 <a class="header-anchor" href="#默认命令" aria-label="Permalink to &quot;默认命令&quot;">​</a></h3><p>默认命令是当定义的配置，和真实对象的属性结构一致时的默认操作，比如：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> config</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  position: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    x: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    y: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    z: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> mesh</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Mesh</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> * mesh: {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> *  position: {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> *    x: 0,</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> *    y: 0,</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> *    z: 0</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> *  }</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> * }</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;"> */</span></span></code></pre></div><p>上方的 mesh 对象的<code>position</code>属性结构和<code>config</code>对象是一致的，这个时候我们可以直接使用默认命令，让处理器自动对操作通知进行处理。</p><h3 id="自定义命令" tabindex="-1">自定义命令 <a class="header-anchor" href="#自定义命令" aria-label="Permalink to &quot;自定义命令&quot;">​</a></h3><p>自定义命令是当配置和真实对象的属性结构不一致时所需要进行的自定义命令操作，或者说你有特殊的处理需求的自定义操作。自定义命令包括：精确自定义命令和模糊自定义命令。</p><p><strong>精确自定义命令</strong>：是通过<code>commands</code>命令链精确到对应的属性，并赋予对应的自定义处理方法。</p><p>下面是一个限定物体位置 x 在 100 以内的自定义命令。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">defineModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  commands: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    set: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      position: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">        x</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">key</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (value </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">&gt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 100</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">            config.position.x </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> 100</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">else</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">            target.position.x </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> value;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">            target.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">updateMatrixWorld</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">        y</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {},</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      rotation</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {},</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><p><strong>模糊自定义命令</strong>：是通过<code>commands</code>命令链的<code>$reg</code>列表进行模糊匹配与自定义处理方法。</p><p>下面是一个自动更新材质的特殊属性的自定义命令。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">defineModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  commands: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    set: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      color</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {},</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      map</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {},</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      $reg: [</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          reg: </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> RegExp</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;transparent|sizeAttenuation&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">),</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">          handler</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">key</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">            target[key] </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> value;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">            target.needsUpdate </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      ],</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>模糊命令是在精确命令没有命中的时候才会执行。</p></li><li><p>模糊自定义命令是一个数组，它是从上往下对数组定义的<code>reg</code>进行匹配处理，只要匹配命中就会执行，并不再往下执行。</p></li></ul></div><h2 id="生成与销毁" tabindex="-1">生成与销毁 <a class="header-anchor" href="#生成与销毁" aria-label="Permalink to &quot;生成与销毁&quot;">​</a></h2><p>生成<code>create</code>与销毁<code>dispose</code>是在相关配置加入与移出配置单所对应的操作，它包括对真实对象的初始构建与真实对象的内存销毁方法。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> default</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> defineModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&lt;</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">BoardConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">Mesh</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">&gt;({</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  create</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">engine</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> geometry</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> BoxGeometry</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> material</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> MeshBasicMaterial</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      color: model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">transColor</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.style),</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    });</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> board</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Mesh</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(geometry, material);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">changeSize</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.size, board);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    board.position.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.position.x, config.position.y, config.position.z);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    board.rotation.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.rotation.x, config.rotation.y, config.rotation.z);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> board;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">removeFromParent</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.geometry.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.material.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在生成方法中需要将生成的目标物体进行<code>return</code>。</p></div><h2 id="模型拓展" tabindex="-1">模型拓展 <a class="header-anchor" href="#模型拓展" aria-label="Permalink to &quot;模型拓展&quot;">​</a></h2><p>我们还有部分需求是，当我们增加一些模块的时候，希望能够拓展其他配置模块的配置属性和对应的处理方法，这里我们可以在定义模型时使用拓展属性。</p><p>举个例子，比如我们有个辅助模块，当辅助模块应用之后我们希望给对应的模块配置加上辅助模块的配置标识，方便快速查找这个模块的对应辅助模块,但是我们不需要对该辅助操作进行相关响应。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> default</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> defineModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  type: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;helper&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  expand: [</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">      // 这个模型会去影响哪些模型配置</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      models: </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> RegExp</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;Mesh|Light|Line|Points|Group|Object3D&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">),</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">      //会对这些模型配置做进行什么属性的更新</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: () </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> ({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        helper: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      }),</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">      // 新增的配置对应的命令链</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      commands: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        add: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">          helper</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {},</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        set: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">          helper</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {},</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  ],</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><h2 id="模块触发器" tabindex="-1">模块触发器 <a class="header-anchor" href="#模块触发器" aria-label="Permalink to &quot;模块触发器&quot;">​</a></h2><p>模块触发器是当规定的相关模块加载完成后，统一触发的一种钩子方法。目前配置化层的模块触发器内置了一个物体模块触发器，当所有的物体模块加载完成后，会触发这个触发器事先添加的方法函数。</p><p>下面是一个在<code>skinnedMesh</code>生成时，会等待所有物体模块执行完成后，进行骨架的绑定。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> default</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> defineModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  create</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> skinnedMesh</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> SkinnedMesh</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">toTrigger</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;object&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, () </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (config.bindMatrix.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">length</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">        const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> matrix</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Matrix4</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        matrix.elements </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (&lt;</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">number</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">[]&gt;[]).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">concat</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          config.bindMatrix</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        ) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">as</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> unknown</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> as</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Matrix4Tuple</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        skinnedMesh.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">bind</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(skeleton, matrix);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">else</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        skinnedMesh.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">bind</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(skeleton, skinnedMesh.matrixWorld);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">      return</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> false</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> skinnedMesh;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><h2 id="异步执行" tabindex="-1">异步执行 <a class="header-anchor" href="#异步执行" aria-label="Permalink to &quot;异步执行&quot;">​</a></h2><p>异步执行是一个增加额外处理线路的工具，主要是在区别于<code>lifeOrder</code>加载时间线的使用，目的是用来兼容无法通过<code>lifeOrder</code>区分前后的属性功能的辅助工具。</p><p>什么情况下会用到异步执行呢？无法确定该功能需要对象的加载时间，或者说是模块与模块间<code>lifeOrder</code>确定后，与模块内属性所需要的资源或者对象加载需要不符合的时候。</p><h3 id="调用激活" tabindex="-1">调用激活 <a class="header-anchor" href="#调用激活" aria-label="Permalink to &quot;调用激活&quot;">​</a></h3><p>我们可以调用<code>model.toAsync</code>这个方法，就会自动激活异步执行开始工作。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> default</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> defineModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  commands: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    add: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      children</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">engine</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">toAsync</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">((</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">finish</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> childrenConfig</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> engine.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getConfigBySymbol</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">            value</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          ) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">as</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> ObjectConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">!</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">childrenConfig) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">            if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (finish) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">              console.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">warn</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\` can not foud object config in engine: \${</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">value</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">}\`</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">            }</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">            return</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> false</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> childrenObject</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> engine.compilerManager.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getObjectfromModules</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">            OBJECTMODULE</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">            value</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          ) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">as</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Object3D</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">!</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">childrenObject) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">            if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (finish) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">              console.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">warn</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">\`can not found this vid in engine: \${</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">value</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">}.\`</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">            }</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">            return</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> false</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          target.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">add</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(childrenObject);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">          childrenObject.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">updateMatrixWorld</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">true</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">          return</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> true</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        });</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><h3 id="执行与自动延迟" tabindex="-1">执行与自动延迟 <a class="header-anchor" href="#执行与自动延迟" aria-label="Permalink to &quot;执行与自动延迟&quot;">​</a></h3><p>调用<code> model.toAsync</code>后，会同步执行一次里面的方法，如果执行后返回的结果为<code>true</code>，这个方法就已经完成了，不会加入异步队列进行后面的过程。</p><p>如果执行返回为<code>false</code>，该方法就会缓存加入异步队列中，等待下一个<code>timer</code>周期开始时再按顺序执行。</p><h3 id="重试与自动排序" tabindex="-1">重试与自动排序 <a class="header-anchor" href="#重试与自动排序" aria-label="Permalink to &quot;重试与自动排序&quot;">​</a></h3><p>在<code>timer</code>按顺序执行异步队列的方法中，如果这个方法在此次执行返回为<code>true</code>，就会被移出异步队列。在一个周期完成时，剩下的方法会形成新的异步队列进入下一个<code>timer</code>周期。</p><h3 id="失败与结束" tabindex="-1">失败与结束 <a class="header-anchor" href="#失败与结束" aria-label="Permalink to &quot;失败与结束&quot;">​</a></h3><p>在一个<code>timer</code>周期中，只要有一个方法的返回为<code>true</code>，异步执行就会重新组织未完成的方法进入下一个<code>timer</code>周期。</p><p>如果一个<code>timer</code>周期中所有的方法返回值都是<code>false</code>，或者说已经完成了所有方法，异步执行就会结束。</p><h2 id="模型事件" tabindex="-1">模型事件 <a class="header-anchor" href="#模型事件" aria-label="Permalink to &quot;模型事件&quot;">​</a></h2><p>模型在执行对应的配置转为 3D 对象业务操作时，会形成相关的操作事件，这能够让我们完成一些监听同步变更的业务。我们可以通过<code>model.on</code>，<code>model.off</code>，去进行相关模型事件的新增和销毁。</p><p>比如在<code>PathGeometry</code>的相关<code>path</code>配置变化的时候，我们怎么去更新<code>PathGeometry</code>让他进行一个同步的运算：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> default</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> defineModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  type: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;PathGeometry&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: () </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> ({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    path: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    divisions: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">128</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    space: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">false</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  }),</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  context</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      pathEvent</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: () </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {},</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    };</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  create</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">engine</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> path</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      (engine.compilerManager.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">getObjectFromModule</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span></span>
<span class="line"><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">        MODULE_TYPE</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">PATH</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        config.path</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      ) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">as</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Path</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">||</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> undefined</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> geometry</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> PathGeometry</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(path, config.divisions, config.space);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> (path) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">pathEvent</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> () </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        config.path </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> config.path;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      };</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">toModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.path)?.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">on</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">MODEL_EVENT</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">COMPILED_UPDATE</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, pathEvent);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> PathGeometry;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">config</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    model</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">toModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(config.path)</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      ?.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">off</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">MODEL_EVENT</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">.</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">COMPILED_UPDATE</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, model.pathEvent);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><h3 id="配置更新事件" tabindex="-1">配置更新事件 <a class="header-anchor" href="#配置更新事件" aria-label="Permalink to &quot;配置更新事件&quot;">​</a></h3><p>配置更新事件时在我们<code>config</code>进行变化后就会触发的事件，很多时候<code>config</code>的变化并不一定会去触发<code>3D</code>对象的业务更新，但是这个变化又有对应的业务需求，我们可以通过<code>MODEL_EVENT.NOTICED</code>进行。</p><h3 id="物体编译事件" tabindex="-1">物体编译事件 <a class="header-anchor" href="#物体编译事件" aria-label="Permalink to &quot;物体编译事件&quot;">​</a></h3><p>物体编译事件是在我们<code>config</code>变化，进而影响到<code>3D</code>对象更新所触发的事件，它包括：</p><ul><li><code>MODEL_EVENT.COMPILED_ADD</code>: 配置加入后的事件。</li><li><code>MODEL_EVENT.COMPILED_REMOVE</code>: 配置被移除后的事件。</li><li><code>MODEL_EVENT.COMPILED_ATTR</code>: 配置的某一个属性更新后的事件名前置，比如我们物体的<code>position.x</code>进行了更新，可以这样进行监听<code>\${MODEL_EVENT.COMPILED_ATTR}:position.x</code></li><li><code>MODEL_EVENT.COMPILED_UPDATE</code>: 配置编译后的事件，所有配置属性更新都会触发。</li><li><code>MODEL_EVENT.COMPILED</code>:配置编译后的事件，包括前面的四个事件触发后，都会触发这个。</li></ul><h2 id="模型继承" tabindex="-1">模型继承 <a class="header-anchor" href="#模型继承" aria-label="Permalink to &quot;模型继承&quot;">​</a></h2><p>当我们有很多模型存在公共的属性，方法，命令链等的时候，我们可以通过<code>defineModel.extend</code>定义一个公共的模型定义函数，将公共的属性方法等内容进行一个提取，将最终的配置化模型进行一个继承定义，进行一个便捷开发和优化。</p><p>比如我们可以定义一个公共的木板定义函数，这个函数里面有公共的位移、选择、销毁方法：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> defineBoardModel</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> defineModel.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">extend</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  shared: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    syncPostion</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      target.position.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(value, value, value);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  commands: {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    set: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      position</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">model</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">syncPostion</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(target, value);</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      rotation</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">        target.rotation.x </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> value;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({ </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">target</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> }) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">removeFromParent</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.material.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.geometry.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">();</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><p>后面我们就可以通过这个方法去定义相关的木板配置化模型：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> WoodenModel</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> defineBoardModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">((</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">boardModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  type</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;Wooden&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  create</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({model, config}) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> wooden</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Mesh</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> BoxGeometry</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">100</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">50</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">20</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    model.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">syncPosition</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(wooden, config.position.x)</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">    return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> wooden</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  },</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({target}) {</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    boardModel.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">dispose</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">({target});</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    target.parent.position.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;">0</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">)</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>通过继承模型方法定义的模型，对于<code>create</code>，<code>dispose</code>属性不会直接进行继承，而是提供了一种比较灵活的方式，按照需要进行方法的调用。</p></li><li><p>其他的属性都可以通过继承进行合并，如果父级的属性与当下的需求属性冲突，可以进行覆盖。</p></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">const</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> WoodenModel</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> =</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> defineBoardModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">((</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">boardModel</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">=&gt;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  type</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62;">&quot;Wooden&quot;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">,</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">  commands</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">    set</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">: {</span></span>
<span class="line"><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;">      position</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">() {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">        // do...</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">      }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">    }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">  }</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">});</span></span></code></pre></div></div>`,83),l=[k];function p(t,e,E,d,r,g){return a(),i("div",null,l)}const c=s(h,[["render",p]]);export{F as __pageData,c as default};
