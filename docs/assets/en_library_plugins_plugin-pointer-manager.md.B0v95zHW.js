import{_ as e,c as t,o as a,a2 as s}from"./chunks/framework.BjUghlZR.js";const u=JSON.parse('{"title":"@vis-three/plugin-pointer-manager","description":"","frontmatter":{},"headers":[],"relativePath":"en/library/plugins/plugin-pointer-manager.md","filePath":"en/library/plugins/plugin-pointer-manager.md"}'),i={name:"en/library/plugins/plugin-pointer-manager.md"},n=s(`<h1 id="vis-three-plugin-pointer-manager" tabindex="-1">@vis-three/plugin-pointer-manager <a class="header-anchor" href="#vis-three-plugin-pointer-manager" aria-label="Permalink to &quot;@vis-three/plugin-pointer-manager&quot;">​</a></h1><p>Pointer Manager Plugin.</p><p>This plugin calculates the pointer from <code>DOM</code> to <code>normalized coordinates</code> in real-time and emits related mouse events.</p><h2 id="latest-version" tabindex="-1">Latest Version <a class="header-anchor" href="#latest-version" aria-label="Permalink to &quot;Latest Version&quot;">​</a></h2><img alt="version" src="https://img.shields.io/npm/v/@vis-three/plugin-pointer-manager"><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><img alt="NPM" src="https://img.shields.io/npm/l/@vis-three/plugin-pointer-manager?color=blue"><h2 id="plugin-name" tabindex="-1">Plugin Name <a class="header-anchor" href="#plugin-name" aria-label="Permalink to &quot;Plugin Name&quot;">​</a></h2><p><code>PointerManagerPlugin</code></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can use the enumeration: <code>POINTER_MANAGER_PLUGIN</code></p></div><h2 id="plugin-dependencies" tabindex="-1">Plugin Dependencies <a class="header-anchor" href="#plugin-dependencies" aria-label="Permalink to &quot;Plugin Dependencies&quot;">​</a></h2><p>None</p><h2 id="plugin-parameters" tabindex="-1">Plugin Parameters <a class="header-anchor" href="#plugin-parameters" aria-label="Permalink to &quot;Plugin Parameters&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> interface</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> PointerManagerParameters</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /** Target DOM element */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  dom</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">?:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> HTMLElement</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">  /** Throttle time for mouse events */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">  throttleTime</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">?:</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5;"> number</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><h2 id="engine-extensions" tabindex="-1">Engine Extensions <a class="header-anchor" href="#engine-extensions" aria-label="Permalink to &quot;Engine Extensions&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-dark github-light vp-code"><code><span class="line"><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">export</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> interface</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> PointerManagerEngine</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;"> extends</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> Engine</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;"> {</span></span>
<span class="line"><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D;">    /** Pointer Manager */</span></span>
<span class="line"><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209;">    pointerManager</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49;">:</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1;"> PointerManager</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">;</span></span>
<span class="line"><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E;">}</span></span></code></pre></div><h2 id="pointermanager" tabindex="-1">PointerManager <a class="header-anchor" href="#pointermanager" aria-label="Permalink to &quot;PointerManager&quot;">​</a></h2><p>This class extends <code>Dispatcher</code> from <code>@vis-three/core</code>.</p><h3 id="mouse" tabindex="-1">mouse <a class="header-anchor" href="#mouse" aria-label="Permalink to &quot;mouse&quot;">​</a></h3><p>• <strong>mouse</strong>: <code>Vector2</code></p><p>Normalized mouse pointer.</p><h3 id="throttletime" tabindex="-1">throttleTime <a class="header-anchor" href="#throttletime" aria-label="Permalink to &quot;throttleTime&quot;">​</a></h3><p>• <strong>throttleTime</strong>: <code>number</code></p><p>Throttle time for mouse events.</p><h3 id="getnormalmouse" tabindex="-1">getNormalMouse <a class="header-anchor" href="#getnormalmouse" aria-label="Permalink to &quot;getNormalMouse&quot;">​</a></h3><p>▸ <strong>getNormalMouse</strong>(): <code>Vector2</code></p><p>Gets the normalized mouse pointer.</p><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Vector2</code></p><p>Normalized mouse pointer.</p><h3 id="getworldposition" tabindex="-1">getWorldPosition <a class="header-anchor" href="#getworldposition" aria-label="Permalink to &quot;getWorldPosition&quot;">​</a></h3><p>▸ <strong>getWorldPosition</strong>(<code>camera</code>, <code>offset</code>, <code>result?</code>): <code>Vector3</code></p><p>Gets the world coordinates of the current pointer position from the given camera.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>camera</code></td><td style="text-align:left;"><code>Camera</code></td></tr><tr><td style="text-align:left;"><code>offset</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>result?</code></td><td style="text-align:left;"><code>Vector3</code></td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Vector3</code></p><p>World coordinates of the pointer.</p><h3 id="intersectplane" tabindex="-1">intersectPlane <a class="header-anchor" href="#intersectplane" aria-label="Permalink to &quot;intersectPlane&quot;">​</a></h3><p>▸ <strong>intersectPlane</strong>(<code>camera</code>, <code>plane</code>, <code>result?</code>): <code>null</code> | <code>Vector3</code></p><p>Gets the intersection point of the current pointer with the given plane from the given camera.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>camera</code></td><td style="text-align:left;"><code>Camera</code></td></tr><tr><td style="text-align:left;"><code>plane</code></td><td style="text-align:left;"><code>Plane</code></td></tr><tr><td style="text-align:left;"><code>result?</code></td><td style="text-align:left;"><code>Vector3</code></td></tr></tbody></table><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | <code>Vector3</code></p><p>Intersection point or <code>null</code>.</p><h3 id="setdom" tabindex="-1">setDom <a class="header-anchor" href="#setdom" aria-label="Permalink to &quot;setDom&quot;">​</a></h3><p>▸ <strong>setDom</strong>(<code>dom</code>): <code>PointerManager</code></p><p>Sets the current target DOM element.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>dom</code></td><td style="text-align:left;"><code>HTMLElement</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>PointerManager</code></p>`,53),r=[n];function o(l,d,h,p,c,g){return a(),t("div",null,r)}const k=e(i,[["render",o]]);export{u as __pageData,k as default};
